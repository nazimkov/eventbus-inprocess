# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  solution: './EventBus.InProcess.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  testProjects: '**/tests/**/*.csproj'
  projectName: 'EventBus.InProcess'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Use .NET Core sdk'
  inputs:
    version: 3.0.100-preview6-012264

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Unit testing'
  inputs:
    command: 'test'
    projects: '$(testProjects)'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    nobuild: true

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator -reports:$(Build.SourcesDirectory)/TestResults/Coverage/*.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
  displayName: Create coverage report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish coverage'
  inputs:
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'
    codecoverageTool: 'cobertura'

