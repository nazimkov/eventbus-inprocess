# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  solution: './EventBus.InProcess.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  tests: './tests/EventBus.InProcess.Tests/EventBus.InProcess.Tests.csproj'
  projectName: 'EventBus.InProcess'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- script: |
    mkdir $(Build.SourcesDirectory)\results
    dotnet test $(tests) --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura  $(tests)
    copy $(Build.SourcesDirectory)\$(projectName)\coverage.cobertura.xml $(Build.SourcesDirectory)\results
    dotnet tool install dotnet-reportgenerator-globaltool --tool-path . --version 4.0.0-rc4
    .\reportgenerator "-reports:$(Build.SourcesDirectory)\$projectName\coverage.cobertura.xml" "-targetdir:results" "-reporttypes:HTMLInline;HTMLChart"
  displayName: 'Unit testing'

- task: PublishTestResults@2
  inputs:
    testRunner: xUnit
    testResultsFiles: '**/*.trx'

- task: PublishCodeCoverageResults@1
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)\results\coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)\results
    codecoverageTool: cobertura


